{"ast":null,"code":"var _jsxFileName = \"/Users/tansk/project/Learning/graphql-demo/client/src/components/BookDetails.js\";\nimport React, { Component } from \"react\";\nimport { graphql } from \"react-apollo\";\nimport { getBookQuery } from '../queries/queries';\n\nconst _ = require('lodash');\n\nclass BookDetails extends Component {\n  displayBookDetails() {\n    const {\n      book\n    } = this.props.data;\n\n    if (book) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }\n      }, book.name), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }\n      }, book.genre), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }\n      }, book.author.name), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }\n      }, \"All books by this author:\"), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"other-books\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }\n      }, book.author.books.map(item => {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: item.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 36\n          }\n        }, item.name);\n      })));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }\n      }, \"No book selected...\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"book-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, this.displayBookDetails()));\n  }\n\n}\n\nexport default graphql(getBookQuery, {\n  options: props => {\n    return {\n      variables: {\n        id: props.bookId\n      }\n    };\n  }\n})(BookDetails);","map":{"version":3,"sources":["/Users/tansk/project/Learning/graphql-demo/client/src/components/BookDetails.js"],"names":["React","Component","graphql","getBookQuery","_","require","BookDetails","displayBookDetails","book","props","data","name","genre","author","books","map","item","id","render","options","variables","bookId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,YAAT,QAA6B,oBAA7B;;AACA,MAAMC,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAjB;;AAEA,MAAMC,WAAN,SAA0BL,SAA1B,CAAoC;AAChCM,EAAAA,kBAAkB,GAAG;AACjB,UAAM;AAAEC,MAAAA;AAAF,QAAW,KAAKC,KAAL,CAAWC,IAA5B;;AACA,QAAGF,IAAH,EAAQ;AACJ,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,IAAI,CAACG,IAAV,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIH,IAAI,CAACI,KAAT,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIJ,IAAI,CAACK,MAAL,CAAYF,IAAhB,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAJJ,eAKI;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACMH,IAAI,CAACK,MAAL,CAAYC,KAAZ,CAAkBC,GAAlB,CAAuBC,IAAD,IAAU;AAC9B,4BAAO;AAAI,UAAA,GAAG,EAAGA,IAAI,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAqBD,IAAI,CAACL,IAA1B,CAAP;AACH,OAFC,CADN,CALJ,CADJ;AAaH,KAdD,MAcO;AACH,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ;AAGH;AACJ;;AACHO,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKX,kBAAL,EAAJ,CADF,CADF;AAKD;;AA7BiC;;AAgCpC,eAAeL,OAAO,CAACC,YAAD,EAAe;AACjCgB,EAAAA,OAAO,EAAGV,KAAD,IAAW;AAChB,WAAO;AACHW,MAAAA,SAAS,EAAE;AACPH,QAAAA,EAAE,EAAER,KAAK,CAACY;AADH;AADR,KAAP;AAKH;AAPgC,CAAf,CAAP,CAQZf,WARY,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { graphql } from \"react-apollo\";\nimport { getBookQuery } from '../queries/queries';\nconst _ = require('lodash');\n\nclass BookDetails extends Component {\n    displayBookDetails() {\n        const { book } = this.props.data;\n        if(book){\n            return (\n                <div>\n                    <h2>{book.name}</h2>\n                    <p>{book.genre}</p>\n                    <p>{book.author.name}</p>\n                    <p>All books by this author:</p>\n                    <ul className=\"other-books\">\n                        { book.author.books.map((item) => {\n                            return <li key={ item.id }>{item.name}</li>\n                        })}\n                    </ul>\n                </div>\n            )\n        } else {\n            return (\n                <div>No book selected...</div>\n            )\n        }\n    }\n  render() {\n    return (\n      <div id=\"book-details\">\n        <p>{this.displayBookDetails()}</p>\n      </div>\n    );\n  }\n}\n\nexport default graphql(getBookQuery, {\n    options: (props) => {\n        return {\n            variables: {\n                id: props.bookId\n            }\n        }\n    }\n})(BookDetails);\n"]},"metadata":{},"sourceType":"module"}