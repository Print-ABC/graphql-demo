{"ast":null,"code":"var _jsxFileName = \"/Users/tansk/project/Learning/graphql-demo/client/src/components/BookList.js\";\nimport React, { Component } from 'react';\nimport { gql } from 'apollo-boost';\nimport { graphql } from 'react-apollo';\nimport { getBooksQuery } from '../queries/queries';\n\nclass BookList extends Component {\n  displayBooks() {\n    var data = this.props.data;\n\n    if (data.loading) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 15\n        }\n      }, \"Loading books ...\");\n    } else {\n      return data.books.map(book => {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: book.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 11\n          }\n        }, book.name);\n      });\n    }\n  }\n\n  render() {\n    console.log(this.props);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      id: \"book-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, this.displayBooks()));\n  }\n\n}\n\nexport default graphql(getBooksQuery)(BookList);","map":{"version":3,"sources":["/Users/tansk/project/Learning/graphql-demo/client/src/components/BookList.js"],"names":["React","Component","gql","graphql","getBooksQuery","BookList","displayBooks","data","props","loading","books","map","book","id","name","render","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,aAAT,QAA8B,oBAA9B;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAC/BK,EAAAA,YAAY,GAAE;AACZ,QAAIC,IAAI,GAAG,KAAKC,KAAL,CAAWD,IAAtB;;AACA,QAAGA,IAAI,CAACE,OAAR,EAAgB;AACd,0BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAR;AACD,KAFD,MAEO;AACL,aAAOF,IAAI,CAACG,KAAL,CAAWC,GAAX,CAAgBC,IAAD,IAAU;AAC9B,4BACE;AAAI,UAAA,GAAG,EAAGA,IAAI,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAsBD,IAAI,CAACE,IAA3B,CADF;AAGD,OAJM,CAAP;AAKD;AACF;;AACDC,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAjB;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,EAAE,EAAC,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,KAAKF,YAAL,EADJ,CADF,CADF;AAOD;;AAtB8B;;AAyBjC,eAAeH,OAAO,CAACC,aAAD,CAAP,CAAuBC,QAAvB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { gql } from 'apollo-boost';\nimport { graphql } from 'react-apollo';\nimport { getBooksQuery } from '../queries/queries'\n\nclass BookList extends Component {\n  displayBooks(){\n    var data = this.props.data;\n    if(data.loading){\n      return (<div>Loading books ...</div>);\n    } else {\n      return data.books.map((book) => {\n        return (\n          <li key={ book.id }>{ book.name }</li>\n        );\n      });\n    }\n  }\n  render() {\n    console.log(this.props);\n    return (\n      <div>\n        <ul id=\"book-list\">\n          { this.displayBooks() }\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default graphql(getBooksQuery)(BookList);\n"]},"metadata":{},"sourceType":"module"}