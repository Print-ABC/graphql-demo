{"ast":null,"code":"var _jsxFileName = \"/Users/tansk/project/Learning/graphql-demo/client/src/components/BookList.js\";\nimport React, { Component } from 'react';\nimport { graphql } from 'react-apollo';\nimport { getBooksQuery } from '../queries/queries';\nimport BookDetails from './BookDetails';\n\nclass BookList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: null\n    };\n  }\n\n  displayBooks() {\n    var data = this.props.data;\n\n    if (data.loading) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 15\n        }\n      }, \"Loading books ...\");\n    } else {\n      return data.books.map(book => {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: book.id,\n          onClick: e => {\n            this.setState({\n              selected: book.id\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 11\n          }\n        }, book.name);\n      });\n    }\n  }\n\n  render() {\n    console.log(this.props);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      id: \"book-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, this.displayBooks()), /*#__PURE__*/React.createElement(BookDetails, {\n      bookId: this.state.selected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default graphql(getBooksQuery)(BookList);","map":{"version":3,"sources":["/Users/tansk/project/Learning/graphql-demo/client/src/components/BookList.js"],"names":["React","Component","graphql","getBooksQuery","BookDetails","BookList","constructor","props","state","selected","displayBooks","data","loading","books","map","book","id","e","setState","name","render","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAC/BK,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGD;;AAEDC,EAAAA,YAAY,GAAE;AACZ,QAAIC,IAAI,GAAG,KAAKJ,KAAL,CAAWI,IAAtB;;AACA,QAAGA,IAAI,CAACC,OAAR,EAAgB;AACd,0BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAR;AACD,KAFD,MAEO;AACL,aAAOD,IAAI,CAACE,KAAL,CAAWC,GAAX,CAAgBC,IAAD,IAAU;AAC9B,4BACE;AAAI,UAAA,GAAG,EAAGA,IAAI,CAACC,EAAf;AAAoB,UAAA,OAAO,EAAIC,CAAD,IAAO;AAAC,iBAAKC,QAAL,CAAc;AAAET,cAAAA,QAAQ,EAAEM,IAAI,CAACC;AAAjB,aAAd;AAAqC,WAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAgFD,IAAI,CAACI,IAArF,CADF;AAGD,OAJM,CAAP;AAKD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAjB;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,EAAE,EAAC,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,KAAKG,YAAL,EADJ,CADF,eAIE,oBAAC,WAAD;AAAa,MAAA,MAAM,EAAG,KAAKF,KAAL,CAAWC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAQD;;AA/B8B;;AAkCjC,eAAeP,OAAO,CAACC,aAAD,CAAP,CAAuBE,QAAvB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { graphql } from 'react-apollo';\nimport { getBooksQuery } from '../queries/queries';\nimport BookDetails from './BookDetails';\n\nclass BookList extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      selected: null\n    }\n  }\n\n  displayBooks(){\n    var data = this.props.data;\n    if(data.loading){\n      return (<div>Loading books ...</div>);\n    } else {\n      return data.books.map((book) => {\n        return (\n          <li key={ book.id } onClick={ (e) => {this.setState({ selected: book.id })} }>{ book.name }</li>\n        );\n      });\n    }\n  }\n\n  render() {\n    console.log(this.props);\n    return (\n      <div>\n        <ul id=\"book-list\">\n          { this.displayBooks() }\n        </ul>\n        <BookDetails bookId={ this.state.selected } />\n      </div>\n    );\n  }\n}\n\nexport default graphql(getBooksQuery)(BookList);\n"]},"metadata":{},"sourceType":"module"}