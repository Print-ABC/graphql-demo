{"ast":null,"code":"var _jsxFileName = \"/Users/tansk/project/Learning/graphql-demo/client/src/components/AddBook.js\";\nimport React, { Component } from \"react\";\nimport { graphql, compose } from \"react-apollo\";\nimport { getAuthorsQuery, addBookMutation } from '../queries/queries';\n\nclass AddBook extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      genre: '',\n      authorId: ''\n    };\n  }\n\n  displayAuthors() {\n    var data = this.props.data;\n\n    if (data.loading) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 15\n        }\n      }, \"Loading Authors...\");\n    } else {\n      return data.authors.map(author => {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          key: author.id,\n          value: author.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 16\n          }\n        }, author.name);\n      });\n    }\n  }\n\n  submitForm(e) {\n    e.preventDefault();\n    console.log(this.state);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      id: \"add-book\",\n      onSubmit: this.submitForm.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, \" Book name: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: e => this.setState({\n        name: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }, \" Genre: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: e => this.setState({\n        genre: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, \" Author: \"), /*#__PURE__*/React.createElement(\"select\", {\n      onChange: e => this.setState({\n        authorId: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, \" Select author \"), this.displayAuthors())), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, \" + \"));\n  }\n\n}\n\nexport default compose(graphql(getAuthorsQuery, {\n  name: \"getAuthorsQuery\"\n}), graphql(addBookMutation, {\n  name: \"addBookMutation\"\n}))(AddBook);","map":{"version":3,"sources":["/Users/tansk/project/Learning/graphql-demo/client/src/components/AddBook.js"],"names":["React","Component","graphql","compose","getAuthorsQuery","addBookMutation","AddBook","constructor","props","state","name","genre","authorId","displayAuthors","data","loading","authors","map","author","id","submitForm","e","preventDefault","console","log","render","bind","setState","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { graphql, compose } from \"react-apollo\";\nimport { getAuthorsQuery, addBookMutation } from '../queries/queries';\n\nclass AddBook extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      name: '',\n      genre: '',\n      authorId: '',\n    };\n  }\n\n  displayAuthors(){\n    var data = this.props.data;\n    if(data.loading){\n      return( <option disabled>Loading Authors...</option>)\n    } else {\n      return data.authors.map((author) => {\n        return <option key={author.id} value={author.id}>{author.name}</option>\n      })\n    }\n  }\n  \n  submitForm(e){\n    e.preventDefault();\n    console.log(this.state);\n  }\n  \n  render() {\n    return (\n      <form id=\"add-book\" onSubmit={ this.submitForm.bind(this) }>\n        <div className=\"field\">\n          <label> Book name: </label>\n          <input type=\"text\" onChange={ (e) => this.setState({ name: e.target.value }) } />\n        </div>\n        <div className=\"field\">\n          <label> Genre: </label>\n          <input type=\"text\" onChange={ (e) => this.setState({ genre: e.target.value }) } />\n        </div>\n        <div className=\"field\">\n          <label> Author: </label>\n          <select onChange={ (e) => this.setState({ authorId: e.target.value }) }>\n            <option> Select author </option>\n            {this.displayAuthors()}\n          </select>\n        </div>\n        <button> + </button>\n      </form>\n    );\n  }\n}\n\nexport default compose(\n  graphql(getAuthorsQuery, { name: \"getAuthorsQuery\" }),\n  graphql(addBookMutation, { name: \"addBookMutation\" })\n)(AddBook);\n"]},"metadata":{},"sourceType":"module"}